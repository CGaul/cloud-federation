akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  #loggers = ["akka.event.slf4j.Slf4jLogger"]

  loglevel = "DEBUG"


  actor {
    provider = "akka.remote.RemoteActorRefProvider"

    #Manage subscriptions (as seen from http://doc.akka.io/docs/akka/snapshot/scala/logging.html):
    debug {
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
  }


  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2553
    }

    # If this is "on", Akka will log all outbound messages at DEBUG level,
    # if off then they are not logged
    log-sent-messages = on

    # If this is "on", Akka will log all inbound messages at DEBUG level,
    # if off then they are not logged
    log-received-messages = on
 }


  actor{
    # Timeout for ActorSystem.actorOf
    creation-timeout = 10s

    deployment{
      # '/user/pubSubFederator' is a remote deployed actor
      /pubSubFederator {
        remote = "akka.tcp://pubSubSystem@192.168.1.13:2553"
      }
    }
  }
}